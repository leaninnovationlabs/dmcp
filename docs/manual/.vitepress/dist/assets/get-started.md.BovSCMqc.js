import{_ as a,c as i,o as t,ae as e}from"./chunks/framework.Cd-3tpCq.js";const k=JSON.parse('{"title":"Installation & Setup","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"get-started.md","filePath":"get-started.md"}'),n={name:"get-started.md"};function l(h,s,p,r,o,c){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="installation-setup" tabindex="-1">Installation &amp; Setup <a class="header-anchor" href="#installation-setup" aria-label="Permalink to &quot;Installation &amp; Setup&quot;">​</a></h1><p>This guide will walk you through installing and setting up DBMCP on your system.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>Before installing DBMCP, ensure you have:</p><ul><li><strong>Python 3.10 or higher</strong></li><li><strong>uv package manager</strong> (recommended) or pip</li><li><strong>Git</strong> (for cloning the repository)</li></ul><h3 id="installing-uv-recommended" tabindex="-1"><i class="fas fa-download"></i> Installing uv (Recommended) <a class="header-anchor" href="#installing-uv-recommended" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt; Installing uv (Recommended)&quot;">​</a></h3><p>uv is a fast Python package installer and resolver, written in Rust. It&#39;s the recommended way to manage dependencies for this project.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install uv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LsSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://astral.sh/uv/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or using pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uv</span></span></code></pre></div><h2 id="installation-steps" tabindex="-1">Installation Steps <a class="header-anchor" href="#installation-steps" aria-label="Permalink to &quot;Installation Steps&quot;">​</a></h2><h3 id="_1-clone-the-repository" tabindex="-1"><i class="fas fa-clone"></i> 1. Clone the Repository <a class="header-anchor" href="#_1-clone-the-repository" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-clone&quot;&gt;&lt;/i&gt; 1. Clone the Repository&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repository-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbmcp</span></span></code></pre></div><h3 id="_2-install-dependencies" tabindex="-1"><i class="fas fa-box"></i> 2. Install Dependencies <a class="header-anchor" href="#_2-install-dependencies" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-box&quot;&gt;&lt;/i&gt; 2. Install Dependencies&quot;">​</a></h3><p>Using uv (recommended):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span></span></code></pre></div><p>Or using pip:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><h3 id="_3-environment-configuration" tabindex="-1"><i class="fas fa-cog"></i> 3. Environment Configuration <a class="header-anchor" href="#_3-environment-configuration" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-cog&quot;&gt;&lt;/i&gt; 3. Environment Configuration&quot;">​</a></h3><p>Create a <code>.env</code> file in the project root:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><p>Edit the <code>.env</code> file with your configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Database Configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DATABASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sqlite+aiosqlite:///./dbmcp.db</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Security (IMPORTANT: Change these in production!)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SECRET_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your-secret-key-here-change-this-in-production</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JWT_SECRET_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jwt-secret-key-change-this-in-production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Server Configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEBUG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Logging</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LOG_LEVEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CORS (add your frontend URLs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ALLOWED_ORIGINS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[&quot;http://localhost:3000&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://localhost:8000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="_4-initialize-the-database" tabindex="-1"><i class="fas fa-database"></i> 4. Initialize the Database <a class="header-anchor" href="#_4-initialize-the-database" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-database&quot;&gt;&lt;/i&gt; 4. Initialize the Database&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alembic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> head</span></span></code></pre></div><h3 id="_5-generate-authentication-token" tabindex="-1"><i class="fas fa-key"></i> 5. Generate Authentication Token <a class="header-anchor" href="#_5-generate-authentication-token" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-key&quot;&gt;&lt;/i&gt; 5. Generate Authentication Token&quot;">​</a></h3><p>Create a token for API access:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/apptoken.py</span></span></code></pre></div><p>This will output a token that you&#39;ll use for authentication.</p><h3 id="_6-start-the-server" tabindex="-1"><i class="fas fa-server"></i> 6. Start the Server <a class="header-anchor" href="#_6-start-the-server" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-server&quot;&gt;&lt;/i&gt; 6. Start the Server&quot;">​</a></h3><h4 id="api-server" tabindex="-1">API Server <a class="header-anchor" href="#api-server" aria-label="Permalink to &quot;API Server&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api_run.py</span></span></code></pre></div><p>The API server will be available at:</p><ul><li><strong>API Documentation</strong>: <a href="http://localhost:8000/dbmcp/docs" target="_blank" rel="noreferrer">http://localhost:8000/dbmcp/docs</a> (when server is running)</li><li><strong>Web UI</strong>: <a href="http://localhost:8000/dbmcp/ui" target="_blank" rel="noreferrer">http://localhost:8000/dbmcp/ui</a> (when server is running)</li><li><strong>Health Check</strong>: <a href="http://localhost:8000/dbmcp/health" target="_blank" rel="noreferrer">http://localhost:8000/dbmcp/health</a> (when server is running)</li></ul><h4 id="mcp-server-optional" tabindex="-1">MCP Server (Optional) <a class="header-anchor" href="#mcp-server-optional" aria-label="Permalink to &quot;MCP Server (Optional)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp_run.py</span></span></code></pre></div><p>The MCP server runs on port 4200 by default.</p><h2 id="verification" tabindex="-1">Verification <a class="header-anchor" href="#verification" aria-label="Permalink to &quot;Verification&quot;">​</a></h2><h3 id="_1-check-api-health" tabindex="-1"><i class="fas fa-heartbeat"></i> 1. Check API Health <a class="header-anchor" href="#_1-check-api-health" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-heartbeat&quot;&gt;&lt;/i&gt; 1. Check API Health&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8000/dbmcp/health</span></span></code></pre></div><p>Expected response:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;healthy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2024-01-01T00:00:00Z&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-test-authentication" tabindex="-1"><i class="fas fa-lock"></i> 2. Test Authentication <a class="header-anchor" href="#_2-test-authentication" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-lock&quot;&gt;&lt;/i&gt; 2. Test Authentication&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer YOUR_TOKEN&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     http://localhost:8000/dbmcp/datasources</span></span></code></pre></div><h3 id="_3-access-web-ui" tabindex="-1"><i class="fas fa-desktop"></i> 3. Access Web UI <a class="header-anchor" href="#_3-access-web-ui" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-desktop&quot;&gt;&lt;/i&gt; 3. Access Web UI&quot;">​</a></h3><p>Open <a href="http://localhost:8000/dbmcp/ui" target="_blank" rel="noreferrer">http://localhost:8000/dbmcp/ui</a> in your browser and enter your authentication token when prompted.</p><h2 id="development-setup" tabindex="-1">Development Setup <a class="header-anchor" href="#development-setup" aria-label="Permalink to &quot;Development Setup&quot;">​</a></h2><h3 id="installing-development-dependencies" tabindex="-1"><i class="fas fa-code"></i> Installing Development Dependencies <a class="header-anchor" href="#installing-development-dependencies" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-code&quot;&gt;&lt;/i&gt; Installing Development Dependencies&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --group</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="running-tests" tabindex="-1"><i class="fas fa-vial"></i> Running Tests <a class="header-anchor" href="#running-tests" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-vial&quot;&gt;&lt;/i&gt; Running Tests&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest</span></span></code></pre></div><h3 id="code-formatting" tabindex="-1"><i class="fas fa-magic"></i> Code Formatting <a class="header-anchor" href="#code-formatting" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-magic&quot;&gt;&lt;/i&gt; Code Formatting&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> black</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h3 id="type-checking" tabindex="-1"><i class="fas fa-search"></i> Type Checking <a class="header-anchor" href="#type-checking" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt; Type Checking&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mypy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h2 id="database-management" tabindex="-1">Database Management <a class="header-anchor" href="#database-management" aria-label="Permalink to &quot;Database Management&quot;">​</a></h2><h3 id="creating-migrations" tabindex="-1"><i class="fas fa-arrow-up"></i> Creating Migrations <a class="header-anchor" href="#creating-migrations" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt; Creating Migrations&quot;">​</a></h3><p>When you modify the database schema:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alembic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revision</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --autogenerate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Description of changes&quot;</span></span></code></pre></div><h3 id="applying-migrations" tabindex="-1"><i class="fas fa-upload"></i> Applying Migrations <a class="header-anchor" href="#applying-migrations" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-upload&quot;&gt;&lt;/i&gt; Applying Migrations&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alembic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> head</span></span></code></pre></div><h3 id="checking-migration-status" tabindex="-1"><i class="fas fa-info-circle"></i> Checking Migration Status <a class="header-anchor" href="#checking-migration-status" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-info-circle&quot;&gt;&lt;/i&gt; Checking Migration Status&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alembic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alembic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> history</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h3><h4 id="_1-port-already-in-use" tabindex="-1"><i class="fas fa-exclamation-triangle"></i> 1. Port Already in Use <a class="header-anchor" href="#_1-port-already-in-use" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt; 1. Port Already in Use&quot;">​</a></h4><p>If you get a &quot;port already in use&quot; error:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find the process using the port</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :8000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Kill the process</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="_2-database-connection-issues" tabindex="-1"><i class="fas fa-database"></i> 2. Database Connection Issues <a class="header-anchor" href="#_2-database-connection-issues" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-database&quot;&gt;&lt;/i&gt; 2. Database Connection Issues&quot;">​</a></h4><ul><li>Ensure your database is running</li><li>Check connection parameters in your datasource configuration</li><li>Verify network connectivity</li></ul><h4 id="_3-authentication-problems" tabindex="-1"><i class="fas fa-key"></i> 3. Authentication Problems <a class="header-anchor" href="#_3-authentication-problems" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-key&quot;&gt;&lt;/i&gt; 3. Authentication Problems&quot;">​</a></h4><ul><li>Regenerate your token: <code>uv run scripts/apptoken.py</code></li><li>Ensure you&#39;re using the correct token format: <code>Bearer &lt;token&gt;</code></li><li>Check that your JWT_SECRET_KEY is set correctly</li></ul><h4 id="_4-mcp-server-issues" tabindex="-1"><i class="fas fa-plug"></i> 4. MCP Server Issues <a class="header-anchor" href="#_4-mcp-server-issues" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-plug&quot;&gt;&lt;/i&gt; 4. MCP Server Issues&quot;">​</a></h4><ul><li>Ensure the MCP server is running on the correct port</li><li>Check that your MCP client is configured correctly</li><li>Verify authentication tokens are being passed correctly</li></ul><h3 id="getting-help" tabindex="-1"><i class="fas fa-question-circle"></i> Getting Help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;&lt;i class=&quot;fas fa-question-circle&quot;&gt;&lt;/i&gt; Getting Help&quot;">​</a></h3><p>If you encounter issues:</p><ol><li>Check the logs for error messages</li><li>Verify your environment configuration</li><li>Ensure all dependencies are installed correctly</li><li>Check the <a href="http://localhost:8000/dbmcp/docs" target="_blank" rel="noreferrer">API documentation</a> (when server is running) for endpoint details</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you have DBMCP installed and running, you can:</p><ol><li><strong><a href="./configure-datasources.html">Configure DataSources</a></strong> - Set up your database connections</li><li><strong><a href="./create-tools.html">Create Tools</a></strong> - Build MCP tools from your queries</li><li><strong><a href="./connect-mcp-clients.html">Connect MCP Clients</a></strong> - Integrate with AI assistants</li></ol><p>Ready to configure your first datasource? Let&#39;s move on to the <a href="./configure-datasources.html">DataSource Configuration Guide</a>!</p>`,79)]))}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
