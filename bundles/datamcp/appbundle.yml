bundle_name: datamcp-bundle
size: 15M
application:
  artifact_size: ""
  name: datamcp
  version: 1.0.0
  replica_count: 1
  namespace: datamcp # This would be used for creating a namespace before deployment( if Name space does not exists)
  brief_description: DataMCP - Data Model Context Protocol
  about: | # Markdown overview of app
    ## DataMCP - Data Model Context Protocol
    - A Python backend server built with FastAPI that can connect to any data source via query, API, or code and expose data operations as MCP tools for AI assistants. The server provides APIs for managing datasources, creating named operations, and executing operations with parameter support and pagination.
    - You can find the documentation [here](https://dmcp.opsloom.io/)
  whats_new: | # Markdown release Details
    ## Features:
    - **Datasource Management**: Ability to connect to various data sources
    - **Named Operations**: Store and manage parameterized operations with jinja template support
    - **Operation Execution**: Run operations with parameter support and pagination
    - **Multiple Data Source Support**: PostgreSQL, MySQL, SQLite, Databricks, APIs, and more coming soon
    - **MCP Tool Support**: Expose data operations as MCP tools
    - **Authentication**: Support for bearer token authentication
    - **UI**: A simple UI for managing datasources and operations

  # Environment variables - mix of secrets and static configuration
image:
  pullPolicy: Always
env:
  # These will be injected from Kubernetes secrets
  SECRET_KEY: "{dmcp.jwt.secret_key}"
  # Static configuration values (won't be touched by secret injection)
  PORT: "80"
service:
  name: dmcp-service
  type: ClusterIP
  port: 80

# Ingress settings
ingress:
  enabled: true
  path: /dmcp

# Probes
livenessProbe:
  httpGet:
    path: /dmcp/health
    port: 80
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /dmcp/health
    port: 80
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
